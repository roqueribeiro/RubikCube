$base-color: #1E1319;
$ground-color: #E5E5E5;
$element-size: 2em;
$sticker-size: 95%;
$rounded: 10%;
$cube-scale: 1.9;
$faces: (left: (0, -90, 180),
    right: (0, 90, 90),
    back: (0, 180, -90),
    front: (0, 0, 0),
    bottom: (-90, 0, -90),
    top: (90, 0, 180));
$colors: (blue: #005DA9,
    green: #006F2D,
    white: #E2E0E3,
    yellow: #ECBF00,
    orange: #FF6200,
    red: #CD151A);

html,
body {
    height: 100%;
    overflow: hidden;
    user-select: none;
    touch-action: none;
    -webkit-text-size-adjust: none;

    background: radial-gradient(circle, white, rgba(black, .5)) {
        color: $ground-color;
        blend-mode: overlay;
    }
}

.centered {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    margin: auto;
}

.scene {
    width: 100%;
    height: 100%;
    perspective: 1200px;
    transform-style: preserve-3d;

    >.pivot {
        width: 0;
        height: 0;
    }

    .anchor {
        width: $element-size;
        height: $element-size * 3;
        background-image: url('./button.png');
        background-size: 115%;
        background-position: top center;
        background-repeat: no-repeat;
        z-index: 999;
    }

    div {
        position: absolute;
        transform-style: inherit;
    }
}

.cube {
    font-size: $cube-scale * 100%;
    margin-left: -$element-size / 2;
    margin-top: -$element-size / 2;

    >.piece {
        width: $element-size - .1em;
        height: $element-size - .1em;

        >.element {
            width: 100%;
            height: 100%;
            background: $base-color;
            outline: 1px solid transparent;

            border: .05em solid $base-color {
                radius: $rounded
            }

            @each $face,
            $angles in $faces {
                &.#{$face} {
                    cursor: grabbing;
                    transition: .2s;
                    transform: rotateX + '('+ nth($angles, 1) + 'deg)'
                        rotateY + '('+ nth($angles, 2) + 'deg)'
                        rotateZ + '('+ nth($angles, 3) + 'deg)'
                        translateZ($element-size / 2);

                    &:hover {
                        background: white;
                        box-shadow: 0 0 20px rgba(white, .30);
                    }

                    &:active {
                        background: red;
                        box-shadow: 0 0 5px rgba(red, .80);
                    }
                }
            }

            >.sticker {
                @extend .centered;
                transform: translateZ(2px);
                width: $sticker-size;
                height: $sticker-size;
                border-radius: $rounded;
                outline: 1px solid transparent;
                box-shadow: inset .05em .05em .2rem 0 rgba(white, .30),
                    inset -.05em -.05em .2rem 0 rgba(black, .30);

                @each $color,
                $value in $colors {
                    &.#{$color} {
                        background-color: $value
                    }
                }
            }
        }
    }
}